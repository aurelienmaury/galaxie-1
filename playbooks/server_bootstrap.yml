---
- name: Galaxie
  hosts: galaxie_staging
  become: yes

  vars:
    galaxie_user: aldecloud

  pre_tasks:

    - name: check mandatory variable galaxie_user
      fail: msg="galaxie_user is undefined"
      when: not galaxie_user

    - set_fact:
        host_key: "{{ inventory_dir }}/keys/{{ inventory_hostname }}"
        target_port: "{{ ansible_port|default('22', true) }}"

    - set_fact:
        galaxie_passwd: "{{ lookup('password', inventory_dir + '/secrets/' + ansible_hostname + '.' + galaxie_user +'.passwd chars=ascii_letters,digits,hexdigits,punctuation') }}"
      delegate_to: localhost
      become: no

    - name: host key is in place
      stat:
        path="{{ host_key }}"
      register: host_key_presence
      delegate_to: localhost
      become: no

    - name: host key absent, generating a new one
      when: not host_key_presence.stat.exists
      command: "ssh-keygen -t rsa -b 4096 -f {{ host_key }}"
      delegate_to: localhost
      become: no

    - script: files/ansible-seed.sh

    - name: Galaxie group is present
      group:
        name="{{ galaxie_user }}"
        gid=4200
        state=present

    - name: Galaxie user is present
      user:
        name="{{ galaxie_user }}"
        uid=4200
        groups="{{ galaxie_user }},sudo"
        generate_ssh_key=yes
        state=present
        shell=/bin/bash

    - name: /home/{{ galaxie_user }}/.bashrc is ok
      copy:
        src=etc_skel_bashrc
        dest=/home/{{ galaxie_user }}/.bashrc
        owner={{ galaxie_user }}
        group={{ galaxie_user }}
        mode=0644

    - name: set permissions of /home/{{ galaxie_user }}/ directory
      file:
        path=/home/{{ galaxie_user }}
        owner={{ galaxie_user }}
        group={{ galaxie_user }}
        state=directory
        mode=0750

    - name: Change password for galaxie
      shell: >
        usermod -p $(echo '{{ galaxie_passwd }}' | openssl passwd -1 -stdin) {{ galaxie_user }}

    - name: host_key is authorized for user
      authorized_key:
        user="{{ galaxie_user }}"
        key="{{ lookup('file', host_key + '.pub') }}"
        state=present
        exclusive=yes

    - name: current key is banished for current ansible_user
      when: ansible_ssh_private_key_file is defined and ansible_user != galaxie_user
      authorized_key:
        user="{{ ansible_user }}"
        key="{{ lookup('file', ansible_ssh_private_key_file + '.pub') }}"
        state=absent

    - name: User is sudoer
      lineinfile: >
        dest=/etc/sudoers.d/galaxie
        regexp='^{{ galaxie_user }}'
        line='{{ galaxie_user }} ALL=(ALL) NOPASSWD: ALL'
        state='present'
        create=yes
        validate='visudo -cf %s'

  roles:
    - ntp-client

  tasks:
# Host server key regeneration, this host is now part of the galaxie
# [inspired_by] http://www.cyberciti.biz/faq/howto-regenerate-openssh-host-keys/

    - name: CHECK - key generation trace is present
      shell: if [ -f "/etc/ssh/.glx_generated_keys" ]; then /bin/true; else /bin/false; fi
      register: glx_generated_keys
      ignore_errors: true

    - name: cleaning old ssh_keys
      shell: /bin/rm -f /etc/ssh/ssh_host_*
      when: glx_generated_keys|failed

    - name: cleaning old ssh_keys
      shell: /usr/sbin/dpkg-reconfigure openssh-server
      when: glx_generated_keys|failed

    - name: leaving trace of key generation
      file:
        path="/etc/ssh/.glx_generated_keys"
        owner=root
        group=root
        state=touch
      when: glx_generated_keys|failed

    - name: delete known fingerprint of host
      shell: "ssh-keygen -R [{{ inventory_hostname }}]:{{ target_port }}"
      delegate_to: localhost
      become: no
      when: glx_generated_keys|failed

    - name: add new fingerprint of host to known host
      shell: "ssh-keyscan -p {{ target_port }} {{ inventory_hostname }} >> ~/.ssh/known_hosts"
      delegate_to: localhost
      become: no
      when: glx_generated_keys|failed

    - lineinfile:
        dest="{{ inventory_dir }}/host_vars/{{ inventory_hostname }}.yml"
        line="---"
        insertbefore="BOF"
        create=yes
      delegate_to: localhost
      become: no

    - lineinfile: >
        dest="{{ inventory_dir }}/host_vars/{{ inventory_hostname }}.yml"
        line="ansible_ssh_private_key_file: {{ host_key }}"
        insertafter="EOF"
      delegate_to: localhost
      become: no

    - lineinfile: >
        dest="{{ inventory_dir }}/host_vars/{{ inventory_hostname }}.yml"
        line="ansible_user: {{ galaxie_user }}"
        insertafter="EOF"
      delegate_to: localhost
      become: no

    - lineinfile: >
        dest="{{ inventory_dir }}/host_vars/{{ inventory_hostname }}.yml"
        line="ansible_port: {{ target_port }}"
        insertafter="EOF"
      delegate_to: localhost
      become: no