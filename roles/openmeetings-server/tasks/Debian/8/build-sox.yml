---
- name: build sox | uninstall sox package
  apt:
    pkg={{ item }}
    state=absent
  with_items:
    - sox

- name: build sox | unnstall libmp3lame, libopus
  apt:
    pkg={{ item }}
    state=absent
  with_items:
    - "libmp3lame0"
    - "libmp3lame-dev"
    - "libopus0"
    - "libopus-dev"
    - "libopusfile0"
    - "libopusfile-dev"

- name: build sox | install requirement
  apt:
    pkg={{ item }}
    state=latest
  with_items:
    - "libflac-dev"
    - "libogg-dev"
    - "libvorbis-dev"
    - "libid3tag0-dev"
    - "libtwolame-dev"
    - "libsndfile1-dev"
    - "libasound2-dev"
    - "libpulse-dev"
    - "libwavpack-dev"
    - "libmad0-dev"
    - "libopencore-amrnb-dev"
    - "libopencore-amrwb-dev"
    - "libmagic-dev"
    - "libao-dev"
    - "nasm"

- name: build sox | check {{ glx_sox_source_dir }} directory
  file:
    path="{{ glx_sox_source_dir }}"
    state=directory

- name: build sox | delete "{{ glx_sox_source_dir }}/{{ glx_sox_app_name }}.{{ glx_sox_extension }}"
  file:
    path="{{ glx_sox_source_dir }}/{{ glx_sox_app_name }}.{{ glx_sox_extension }}"
    state=absent
  when: glx_sox_force_install

- name: build sox | get "{{ glx_sox_download_url }}"
  get_url:
    url="{{ glx_sox_download_url }}"
    dest="{{ glx_sox_source_dir }}"
    sha256sum="{{ glx_sox_sha256sum }}"
  register: glx_sox_source_download

- name: build sox | delete "{{ glx_sox_source_dir }}/{{ glx_sox_app_name }}" directory
  file:
    path="{{ glx_sox_source_dir }}/{{ glx_sox_app_name }}"
    state=absent
  when: glx_sox_source_download.changed

- name: build sox | unarchive {{ glx_sox_source_download.dest }}
  unarchive:
    src="{{ glx_sox_source_download.dest }}"
    dest="{{ glx_sox_source_dir }}"
    copy=no
    owner="root"
    group="root"
  when: glx_sox_source_download.changed

# Download libmp3lame sources
- name: build sox | clone latest libmp3lame
  git:
    repo=https://github.com/gypified/libmp3lame.git
    dest={{ glx_sox_source_dir }}/libmp3lame
    accept_hostkey=true

# Build libmp3lame
- name: build sox | compile libmp3lame
  command: "{{ item }}"
  args:
    chdir: "{{ glx_sox_source_dir }}/libmp3lame"
    creates: "{{ glx_sox_lib_dir }}/libmp3lame.a"
  with_items:
    - ./configure --prefix={{ glx_sox_prefix }} --enable-nasm --disable-shared --includedir={{ glx_sox_prefix }}/include
    - make
    - make install
    - make distclean

# Download opus sources
- name: build sox | clone latest opus
  git:
    repo=git://git.opus-codec.org/opus.git
    dest={{ glx_sox_source_dir }}/opus
    accept_hostkey=yes

# Build opus
- name: build sox | compile libopus
  command: "{{ item }}"
  args:
    chdir: "{{ glx_sox_source_dir }}/opus"
    creates: "{{ glx_sox_lib_dir }}/libopus.a"
  with_items:
    - ./autogen.sh
    - ./configure --prefix={{ glx_sox_prefix }} --disable-shared
    - make
    - make install
    - make distclean

# Build sox
- name: build sox | run configure script ...
  shell: ./configure \
          --prefix={{ glx_sox_prefix }} \
          --sysconfdir={{ glx_sox_sysconfdir }} \
          --enable-dl-mad \
          --enable-dl-lame \
          --enable-dl-twolame \
          --enable-dl-amrwb \
          --enable-dl-amrnb \
          --enable-dl-sndfile
    chdir="{{ glx_sox_source_dir }}/{{ glx_sox_app_name }}"
  changed_when: false

- name: build sox | make -s
  shell: make -s
    chdir="{{ glx_sox_source_dir }}/{{ glx_sox_app_name }}"
  changed_when: false

- name: build sox | creat .deb package
  shell: checkinstall \
         --pkgsource="{{ glx_sox_source_download.dest }}" \
         --pkgaltsource="{{ glx_sox_download_url }}" \
         --pkglicense="GPL2" \
         --deldesc=no \
         --nodoc \
         --maintainer="Ansible" \
         --pkgarch=$(dpkg --print-architecture) \
         --requires="libflac8, libogg0, libvorbis0a, libid3tag0, libtwolame0, libsndfile1, libasound2, libpulse0, libwavpack1, libmad0, libopencore-amrnb0, libopencore-amrwb0, libmagic1, libao4" \
         --pakdir="{{ glx_sox_source_dir }}" \
         --reset-uids \
         --default \
         --install \
         make install
    chdir="{{ glx_sox_source_dir }}/{{ glx_sox_app_name }}"
  changed_when: false
